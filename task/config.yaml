qlib:
    uri: ~/.qlib/qlib_data/cn_data # qlib数据存储路径


process_design: # 流程设计开关
    upgrade: False # 是否升级数据集
    dataset: True # 是否处理数据集
    train: True # 是否进行训练
    backtest: True # 是否回测
    continuous: True # 是否持续部署

folders: # 生成存储文件
    data: data # 文件名为data
    model: model
    result: result
    plt: plt
    backtest: backtest
    continuous: continuous

experiment: # 实验基础设置
    name: task_5
    path: ./ # 项目文件夹存储位置

compare: # 对比图像开关
    report_normal_df: True # 是否生成对比交易图
    analysis_df: False # 是否结果对比图

experiments_list: # 实验模型配置
  - train_name: model_1
    config:
        optimize_hyperparams: False
        accuracy: False
        loss: True
    model: 
        task:
            model:  
                class: LGBModel  # qlib内置模型类名
                module_path: qlib.contrib.model.gbdt  # qlib内置模型类所在位置
                kwargs:  # 超参数设置
                    loss: mse
                    num_boost_round: 1000
                    early_stopping_rounds: 100
                    colsample_bytree: 0.8879
                    learning_rate: 0.0421
                    subsample: 0.8789
                    lambda_l1: 205.6999
                    lambda_l2: 580.9768
                    max_depth: 8
                    num_leaves: 210
                    num_threads: 20
  - train_name: model_2
    experiment:
        name: model_2
        path: ./ 
    config:
        optimize_hyperparams: True # 是否进行超参数优化
        param_grid_path : ./param_grid.json # 参数空间位置
        loss: False
        accuracy: False
    model: 
        task: 
            model:
                class: SVRModel # 自定义模型类名
                module_path: code_lib.Qlib_model #自定义模型类位置
                kwargs:

dataset:
    path: # 可加载外部数据的存储位置，需要注意数据的格式
    class:  DatasetH  # qlib内部dataset类名
    module_path:  qlib.data.dataset  # qlib内部dataset类定义位置
    kwargs:  
        handler:  
            class:  Alpha158  # qlib内部dataset.handler类名
            module_path: qlib.contrib.data.handler # qlib内部dataset.handler类定义位置
            kwargs:
                start_time: '2016-07-01' #dataset开始时间
                end_time: '2020-08-31' # dataset结束时间
                fit_start_time: '2016-07-01'
                fit_end_time: '2020-06-30'
                instruments: yunnan # 股票市场，yunnan为自定义股票市场，系统自带的是csi300，csi100,可以自定义txt文件放到\.qlib\qlib_data\cn_data\instruments文件夹内
                infer_processors: # 内置预处理方法
                    - class: FilterCol # 筛选特定值
                      kwargs:
                            fields_group: feature
                            col_list: ["RESI5", "WVMA5", "RSQR5", "KLEN",
                                        "OPEN0", "HIGH0", "LOW0", "ROC5"] # feature种类，可以自定义范围
                    - class: RobustZScoreNorm  #标准化方法
                      kwargs:
                            fields_group: feature
                            clip_outlier: true
                    - class: Fillna # 以0填充缺失值
                      kwargs:
                            fields_group: feature
                learn_processors:
                    - class: DropnaLabel # 删除标签为缺失值的样本
                    - class: CSRankNorm # 正态分布标准化
                      kwargs:
                            fields_group: label
                label: ["Ref($close, -2) / Ref($close, -1) - 1"] # 用内置运算方法定义标签
        segments: # 设置train、valid、test的时间范围
            train: ['2018-07-02', '2019-12-31'] 
            valid: ['2020-01-01', '2020-06-30']
            test: ['2020-07-01', '2020-08-31']


port_analysis_config: 
    executor: 
        class: SimulatorExecutor # 内置executor
        module_path: qlib.backtest.executor
        kwargs: 
            time_per_step: day # 时间间隔
            generate_portfolio_metrics: True
    strategy:
        class: TopkDropoutStrategy #内置策略名称
        module_path: qlib.contrib.strategy.signal_strategy # 内置策略位置
        kwargs: 
            model: # 后续配置已训练好的模型
            dataset: # 后续配置已与处理好的dataset
            topk: 10 # 策略参数设置
            n_drop: 2
    backtest: 
        start_time: '2020-07-01' # 回测开始时间
        end_time: '2020-08-31' # 回测结束时间
        account: 100000000 # 回测账户额度
        benchmark: SH000300 # 基线
        exchange_kwargs: # 回测参数设置
            freq: day
            limit_threshold: 0.095
            deal_price: close
            open_cost: 0.0005
            close_cost: 0.0015
            min_cost: 5


continuous_deployment:
    continuous: False # 是否进行持续部署，自动每天执行一次
    update_data: False # 是否更新当前下载的存储数据，即更新~/.qlib/qlib_data/cn_data文件夹
    end_day: '2020-12-31' # 持续部署验证的回测结束时间，单次部署时的时间设置，持续部署自动更新时间到当前日期
    dataset:
        config: ./task_4/data/dataset.yaml # dataset参数设置存储配置文件位置
    model:
        config: ./task_4/model/model_1.yaml # 已训练好的模型配置存储文件位置
        path:  ./task_4/model/model_1.bin # 已训练好的模型文件位置
    annual_return_threshold: 0.2 # 持续部署时的年化收益率下限
    retrain_interval : 7 # 持续部署时的训练间隔